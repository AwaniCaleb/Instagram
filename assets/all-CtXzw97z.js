var u=Object.defineProperty;var h=(r,e,t)=>e in r?u(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var l=(r,e,t)=>h(r,typeof e!="symbol"?e+"":e,t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const s of i)if(s.type==="childList")for(const a of s.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&n(a)}).observe(document,{childList:!0,subtree:!0});function t(i){const s={};return i.integrity&&(s.integrity=i.integrity),i.referrerPolicy&&(s.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?s.credentials="include":i.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(i){if(i.ep)return;i.ep=!0;const s=t(i);fetch(i.href,s)}})();class c{static init(){window.addEventListener("resize",this.checkScreenSize),this.checkScreenSize()}static checkScreenSize(){const e=window.innerWidth;let t;e<=768?t="small":e<=1024?t="medium":t="large",t!==this.currentSize&&(this.currentSize=t,window.dispatchEvent(new CustomEvent("screenSizeChange",{detail:t})))}}l(c,"currentSize",null);class m{static init(){window.addEventListener("screenSizeChange",t=>{t.detail==="small"?this.hideContent():this.showContent(),c.checkScreenSize()}),c.currentSize==="small"?this.hideContent():this.showContent()}static hideContent(){document.getElementById("unsupported-device").classList.remove("hidden"),document.querySelectorAll("[d-c='page-content']").forEach(e=>{e.classList.add("hidden")})}static showContent(){document.getElementById("unsupported-device").classList.add("hidden"),document.querySelectorAll("[d-c='page-content']").forEach(e=>{e.classList.remove("hidden")})}}const o=class o{static async renderLowerResImage({source:e=null,image:t=null}){let n;if(e)n=await o.loadImage(e);else if(t)n=t,e=t.src;else throw new Error("Provide either 'source' or 'image' in options.");return await o.getFileSizeMB(e)<=o.MAX_SIZE_MB?e:o.resizeImage(n,.5)}static resizeImage(e,t){const n=document.createElement("canvas");return n.width=e.width*t,n.height=e.height*t,n.getContext("2d").drawImage(e,0,0,n.width,n.height),n.toDataURL("image/jpeg",.9)}static loadImage(e){return new Promise((t,n)=>{const i=new Image;i.onload=()=>t(i),i.onerror=n,i.src=e})}static async getFileSizeMB(e){return(await(await fetch(e)).blob()).size/(1024*1024)}static async processAllLowRezImages(){const e=document.querySelectorAll("img[low-rez]");for(const t of e){const n=await o.renderLowerResImage({image:t});t.src=n}}};l(o,"MAX_SIZE_MB",2);let d=o;window.addEventListener("DOMContentLoaded",()=>{d.processAllLowRezImages()});c.init();m.init();
